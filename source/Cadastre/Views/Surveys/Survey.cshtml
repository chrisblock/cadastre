@using Cadastre.Models

@model SurveyViewModel

@{
	ViewBag.Title = String.Format("Survey: {0}", @Model.Name);
}

<h2>@Model.Name</h2>

<section id="survey">
	<dl class="dl-horizontal">
		<dt>User:</dt>
		<dd>@Model.User</dd>
		<dt>Machine:</dt>
		<dd>@Model.Machine</dd>
		<dt>Start:</dt>
		<dd>@Model.Start</dd>
		@if (@Model.End.HasValue)
		{
			<dt>End:</dt>
			<dd>@Model.End</dd>
		}
	</dl>
	<h3>Databases:</h3>
	<table class="table">
		<thead>
			<tr>
				<th>Server</th>
				<th>Database</th>
				<th>Reference</th>
				<th>Connection Error</th>
				<th>ETL Error</th>
				<th>Duration</th>
			</tr>
		</thead>
		<tbody data-bind="foreach: { data: databases, as: 'database' }">
			<tr data-bind="css: { 'cursor-hand': isReferenceSchema() === false }, click: toggleDetails">
				<td data-bind="text: server"></td>
				<td data-bind="text: database"></td>
				<td class="text-center"><input type="checkbox" disabled="disabled" data-bind="checked: isReferenceSchema" /></td>
				<td class="text-center"><input type="checkbox" disabled="disabled" data-bind="checked: hadConnectionError" /></td>
				<td class="text-center"><input type="checkbox" disabled="disabled" data-bind="checked: hadEtlError" /></td>
				<td><span data-bind="text: duration">0</span> ms</td>
			</tr>
			<tr data-bind="visible: areDetailsVisible">
				<td colspan="6">
					<div class="survey-results">
						<ul class="nav nav-tabs" data-bind="foreach: { data: tabs, as: 'tab' }">
							<li class="dropdown">
								<a href="#" class="dropdown-toggle" data-toggle="dropdown"><span data-bind="text: title"></span> <span class="caret"></span></a>
								<ul class="dropdown-menu" data-bind="foreach: { data: types, as: 'type' }">
									<li data-bind="css: { disabled: isDisabled }"><a data-bind="text: title, attr: { href: '#db-' + database.id() + '-' + tab.id() + '-' + type.id() }" data-toggle="tab"></a></li>
								</ul>
							</li>
						</ul>
						<div class="tab-content" data-bind="foreach: { data: tabs, as: 'tab' }">
							<!-- ko foreach: { data: types, as: 'type' } -->
							<div class="tab-pane db-object-list" data-bind="attr: { id: 'db-' + database.id() + '-' + tab.id() + '-' + type.id() }">
								<!-- ko if: needsParentColumn -->
								<table class="table table-condensed">
									<thead>
										<tr>
											<th>Table</th>
											<th>Name</th>
										</tr>
									</thead>
									<tbody data-bind="foreach: objects">
										<tr>
											<td data-bind="text: parent"></td>
											<td data-bind="text: name"></td>
										</tr>
									</tbody>
								</table>
								<!-- /ko -->
								<!-- ko ifnot: needsParentColumn -->
								<table class="table table-condensed">
									<thead>
										<tr>
											<th>Name</th>
										</tr>
									</thead>
									<tbody data-bind="foreach: objects">
										<tr>
											<td data-bind="text: name"></td>
										</tr>
									</tbody>
								</table>
								<!-- /ko -->
							</div>
							<!-- /ko -->
						</div>
					</div>
				</td>
			</tr>
		</tbody>
	</table>
</section>

@section scripts {
<script type="text/javascript">
	$(document).ready(function () {
		var urls = {
			Missing: '@Url.HttpRouteUrl("MissingObjectsApi", new { surveyId = @Model.Id, databaseSurveyId = 0 })',
			Extra: '@Url.HttpRouteUrl("ExtraObjectsApi", new { surveyId = @Model.Id, databaseSurveyId = 0 })'
		};

		cadastre.survey.init(urls, '@Url.HttpRouteUrl("DatabaseSurveysApi", new { surveyId = @Model.Id })', '#survey');
	});
</script>
}
